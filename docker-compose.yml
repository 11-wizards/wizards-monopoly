version: "3.9"

services:
  server:
    container_name: praktikum-server
    image: praktikum-server
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - app-net
    environment:
      SERVER_PORT: ${SERVER_PORT}
    command: sh -c "./wait-for postgres:${POSTGRES_PORT} -- node ./index.js"
    env_file:
      - ./.env
    depends_on:
      - postgres

  postgres:
    image: postgres:14
    container_name: postgresql
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - app-net
    env_file:
      - ./.env
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    networks:
      - app-net
    ports:
      - "${PGADMIN_PORT}:80"
    env_file:
      - ./.env
    volumes:
      - ./tmp/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

  webserver:
    container_name: nginx
    image: nginx:1.25
    restart: always
    depends_on:
      - server
    ports:
      - "NGINX_HTTP_PORT:${NGINX_HTTP_PORT}"
      - "NGINX_HTTPS_PORT:${NGINX_HTTPS_PORT}"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/:/etc/nginx/conf.d/
      - certbot/www:/var/www/certbot/
      - certbot/conf:/etc/letsencrypt/

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - certbot/www:/var/www/certbot/
      - certbot/conf:/etc/letsencrypt/
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/certbot/ --email example@example.com --agree-tos --no-eff-email --staging -d monopoly.ya-praktikum.tech  -d www.monopoly.ya-praktikum.tech

networks:
  app-net:
    driver: bridge
